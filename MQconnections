import org.apache.poi.ss.usermodel.*
import org.apache.poi.xssf.usermodel.XSSFWorkbook

class Steps {

    def workbook = new XSSFWorkbook()
    def sheet = workbook.createSheet("Duplicate Tags")
    def rowNum = 0
    def excelFilePath = "output/DuplicateTags.xlsx"
    
    @Before
    void setUp() {
        // Create header row
        def headerRow = sheet.createRow(rowNum++)
        headerRow.createCell(0).setCellValue("Filename")
        headerRow.createCell(1).setCellValue("Duplicate Tags")
    }

    @Given("I read the file in path {string}")
    void read_file(String filepath) {
        def file = new File(filepath)
        if (!file.exists()) {
            throw new FileNotFoundException("File not found: ${filepath}")
        }

        def tags = []
        def duplicates = []
        
        // Read each line and extract tags
        file.eachLine { line ->
            def matcher = line =~ /\[(.{1,13})\]/
            if (matcher.find()) {
                def tag = matcher.group(1).trim()
                if (tags.contains(tag)) {
                    duplicates << tag
                } else {
                    tags << tag
                }
            }
        }

        // If there are duplicates, save them to the Excel sheet
        if (!duplicates.isEmpty()) {
            def row = sheet.createRow(rowNum++)
            row.createCell(0).setCellValue(filepath) // Filename
            row.createCell(1).setCellValue(duplicates.join(", ")) // Duplicates
        }
    }

    @Then("Save into Excel file")
    void save_into_excel() {
        // Save the workbook to the specified path
        new File(excelFilePath).withOutputStream { outputStream ->
            workbook.write(outputStream)
        }
        workbook.close()
        println "Duplicates saved to ${excelFilePath}"
    }
}
